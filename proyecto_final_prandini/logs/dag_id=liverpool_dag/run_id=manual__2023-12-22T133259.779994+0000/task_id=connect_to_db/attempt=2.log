[2023-12-22T13:34:03.253+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: liverpool_dag.connect_to_db manual__2023-12-22T13:32:59.779994+00:00 [queued]>
[2023-12-22T13:34:03.266+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: liverpool_dag.connect_to_db manual__2023-12-22T13:32:59.779994+00:00 [queued]>
[2023-12-22T13:34:03.267+0000] {taskinstance.py:1361} INFO - Starting attempt 2 of 4
[2023-12-22T13:34:03.285+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): connect_to_db> on 2023-12-22 13:32:59.779994+00:00
[2023-12-22T13:34:03.291+0000] {standard_task_runner.py:57} INFO - Started process 235 to run task
[2023-12-22T13:34:03.294+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'liverpool_dag', 'connect_to_db', 'manual__2023-12-22T13:32:59.779994+00:00', '--job-id', '522', '--raw', '--subdir', 'DAGS_FOLDER/liverpool.py', '--cfg-path', '/tmp/tmpj1a173zc']
[2023-12-22T13:34:03.297+0000] {standard_task_runner.py:85} INFO - Job 522: Subtask connect_to_db
[2023-12-22T13:34:03.364+0000] {task_command.py:416} INFO - Running <TaskInstance: liverpool_dag.connect_to_db manual__2023-12-22T13:32:59.779994+00:00 [running]> on host d017a9b7b4e6
[2023-12-22T13:34:03.472+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='liverpool_dag' AIRFLOW_CTX_TASK_ID='connect_to_db' AIRFLOW_CTX_EXECUTION_DATE='2023-12-22T13:32:59.779994+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-12-22T13:32:59.779994+00:00'
[2023-12-22T13:34:03.487+0000] {base.py:73} INFO - Using connection ID 'coder_redshit' for task execution.
[2023-12-22T13:34:03.568+0000] {utils.py:23} INFO - Conexi√≥n a la base de datos establecida exitosamente. URL: redshift://santiprandini_coderhouse:***@data-engineer-cluster.cyhh5bfevlmn.us-east-1.redshift.amazonaws.com:5439/data-engineer-database
[2023-12-22T13:34:03.569+0000] {python.py:194} INFO - Done. Returned value was: Engine(redshift://santiprandini_coderhouse:***@data-engineer-cluster.cyhh5bfevlmn.us-east-1.redshift.amazonaws.com:5439/data-engineer-database)
[2023-12-22T13:34:03.581+0000] {xcom.py:661} ERROR - Object of type Engine is not JSON serializable. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config or make sure to decorate your object with attr.
[2023-12-22T13:34:03.583+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 91, in default
    return serialize(o)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/serialization/serde.py", line 178, in serialize
    raise TypeError(f"cannot serialize object of type {cls}")
TypeError: cannot serialize object of type <class 'sqlalchemy.engine.base.Engine'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 2479, in xcom_push
    XCom.set(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/xcom.py", line 244, in set
    value = cls.serialize_value(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/xcom.py", line 659, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
  File "/usr/local/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 104, in encode
    return super().encode(o)
  File "/usr/local/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 93, in default
    return super().default(o)
  File "/usr/local/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Engine is not JSON serializable
[2023-12-22T13:34:03.598+0000] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=liverpool_dag, task_id=connect_to_db, execution_date=20231222T133259, start_date=20231222T133403, end_date=20231222T133403
[2023-12-22T13:34:03.612+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 522 for task connect_to_db (Object of type Engine is not JSON serializable; 235)
[2023-12-22T13:34:03.627+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-12-22T13:34:03.661+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
